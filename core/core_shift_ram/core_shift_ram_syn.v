// megafunction wizard: %Shift register (RAM-based)%
// GENERATION: STANDARD
// VERSION: WM1.0
// MODULE: ALTSHIFT_TAPS 

// ============================================================
// File Name: core_shift_ram.v
// Megafunction Name(s):
// 			ALTSHIFT_TAPS
//
// Simulation Library Files(s):
// 			altera_mf
// ============================================================
// ************************************************************
// THIS IS A WIZARD-GENERATED FILE. DO NOT EDIT THIS FILE!
//
// 18.0.0 Build 614 04/24/2018 SJ Standard Edition
// ************************************************************


//Copyright (C) 2018  Intel Corporation. All rights reserved.
//Your use of Intel Corporation's design tools, logic functions 
//and other software and tools, and its AMPP partner logic 
//functions, and any output files from any of the foregoing 
//(including device programming or simulation files), and any 
//associated documentation or information are expressly subject 
//to the terms and conditions of the Intel Program License 
//Subscription Agreement, the Intel Quartus Prime License Agreement,
//the Intel FPGA IP License Agreement, or other applicable license
//agreement, including, without limitation, that your use is for
//the sole purpose of programming logic devices manufactured by
//Intel and sold by Intel or its authorized distributors.  Please
//refer to the applicable agreement for further details.


//altshift_taps DEVICE_FAMILY="Cyclone IV E" NUMBER_OF_TAPS=3 RAM_BLOCK_TYPE="M9K" TAP_DISTANCE=320 WIDTH=8 clock shiftin shiftout taps INTENDED_DEVICE_FAMILY="Cyclone IV E" lpm_hint="RAM_BLOCK_TYPE=M9K"
//VERSION_BEGIN 18.0 cbx_altdpram 2018:04:24:18:04:18:SJ cbx_altera_counter 2018:04:24:18:04:18:SJ cbx_altera_syncram 2018:04:24:18:04:18:SJ cbx_altera_syncram_nd_impl 2018:04:24:18:04:18:SJ cbx_altshift_taps 2018:04:24:18:04:18:SJ cbx_altsyncram 2018:04:24:18:04:18:SJ cbx_cycloneii 2018:04:24:18:04:18:SJ cbx_lpm_add_sub 2018:04:24:18:04:18:SJ cbx_lpm_compare 2018:04:24:18:04:18:SJ cbx_lpm_counter 2018:04:24:18:04:18:SJ cbx_lpm_decode 2018:04:24:18:04:18:SJ cbx_lpm_mux 2018:04:24:18:04:18:SJ cbx_mgl 2018:04:24:18:08:49:SJ cbx_nadder 2018:04:24:18:04:18:SJ cbx_stratix 2018:04:24:18:04:18:SJ cbx_stratixii 2018:04:24:18:04:18:SJ cbx_stratixiii 2018:04:24:18:04:18:SJ cbx_stratixv 2018:04:24:18:04:18:SJ cbx_util_mgl 2018:04:24:18:04:18:SJ  VERSION_END
// synthesis VERILOG_INPUT_VERSION VERILOG_2001
// altera message_off 10463



//altsyncram ADDRESS_REG_B="CLOCK0" DEVICE_FAMILY="Cyclone IV E" NUMWORDS_A=318 NUMWORDS_B=318 OPERATION_MODE="DUAL_PORT" OUTDATA_REG_B="CLOCK0" RAM_BLOCK_TYPE="M9K" READ_DURING_WRITE_MODE_MIXED_PORTS="OLD_DATA" WIDTH_A=24 WIDTH_B=24 WIDTH_BYTEENA_A=1 WIDTHAD_A=9 WIDTHAD_B=9 address_a address_b clock0 clocken0 data_a q_b wren_a
//VERSION_BEGIN 18.0 cbx_altera_syncram_nd_impl 2018:04:24:18:04:18:SJ cbx_altsyncram 2018:04:24:18:04:18:SJ cbx_cycloneii 2018:04:24:18:04:18:SJ cbx_lpm_add_sub 2018:04:24:18:04:18:SJ cbx_lpm_compare 2018:04:24:18:04:18:SJ cbx_lpm_decode 2018:04:24:18:04:18:SJ cbx_lpm_mux 2018:04:24:18:04:18:SJ cbx_mgl 2018:04:24:18:08:49:SJ cbx_nadder 2018:04:24:18:04:18:SJ cbx_stratix 2018:04:24:18:04:18:SJ cbx_stratixii 2018:04:24:18:04:18:SJ cbx_stratixiii 2018:04:24:18:04:18:SJ cbx_stratixv 2018:04:24:18:04:18:SJ cbx_util_mgl 2018:04:24:18:04:18:SJ  VERSION_END

//synthesis_resources = M9K 2 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
(* ALTERA_ATTRIBUTE = {"OPTIMIZE_POWER_DURING_SYNTHESIS=NORMAL_COMPILATION"} *)
module  core_shift_ram_altsyncram
	( 
	address_a,
	address_b,
	clock0,
	clocken0,
	data_a,
	q_b,
	wren_a) /* synthesis synthesis_clearbox=1 */;
	input   [8:0]  address_a;
	input   [8:0]  address_b;
	input   clock0;
	input   clocken0;
	input   [23:0]  data_a;
	output   [23:0]  q_b;
	input   wren_a;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri1   [8:0]  address_b;
	tri1   clock0;
	tri1   clocken0;
	tri1   [23:0]  data_a;
	tri0   wren_a;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire  [0:0]   wire_ram_block3a_0portbdataout;
	wire  [0:0]   wire_ram_block3a_1portbdataout;
	wire  [0:0]   wire_ram_block3a_2portbdataout;
	wire  [0:0]   wire_ram_block3a_3portbdataout;
	wire  [0:0]   wire_ram_block3a_4portbdataout;
	wire  [0:0]   wire_ram_block3a_5portbdataout;
	wire  [0:0]   wire_ram_block3a_6portbdataout;
	wire  [0:0]   wire_ram_block3a_7portbdataout;
	wire  [0:0]   wire_ram_block3a_8portbdataout;
	wire  [0:0]   wire_ram_block3a_9portbdataout;
	wire  [0:0]   wire_ram_block3a_10portbdataout;
	wire  [0:0]   wire_ram_block3a_11portbdataout;
	wire  [0:0]   wire_ram_block3a_12portbdataout;
	wire  [0:0]   wire_ram_block3a_13portbdataout;
	wire  [0:0]   wire_ram_block3a_14portbdataout;
	wire  [0:0]   wire_ram_block3a_15portbdataout;
	wire  [0:0]   wire_ram_block3a_16portbdataout;
	wire  [0:0]   wire_ram_block3a_17portbdataout;
	wire  [0:0]   wire_ram_block3a_18portbdataout;
	wire  [0:0]   wire_ram_block3a_19portbdataout;
	wire  [0:0]   wire_ram_block3a_20portbdataout;
	wire  [0:0]   wire_ram_block3a_21portbdataout;
	wire  [0:0]   wire_ram_block3a_22portbdataout;
	wire  [0:0]   wire_ram_block3a_23portbdataout;
	wire  [8:0]  address_a_wire;
	wire  [8:0]  address_b_wire;

	cycloneive_ram_block   ram_block3a_0
	( 
	.clk0(clock0),
	.ena0(clocken0),
	.portaaddr({address_a_wire[8:0]}),
	.portadatain({data_a[0]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[8:0]}),
	.portbdataout(wire_ram_block3a_0portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clk1(1'b0),
	.clr0(1'b0),
	.clr1(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbaddrstall(1'b0),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block3a_0.clk0_core_clock_enable = "ena0",
		ram_block3a_0.clk0_input_clock_enable = "ena0",
		ram_block3a_0.clk0_output_clock_enable = "ena0",
		ram_block3a_0.connectivity_checking = "OFF",
		ram_block3a_0.logical_ram_name = "ALTSYNCRAM",
		ram_block3a_0.mixed_port_feed_through_mode = "old",
		ram_block3a_0.operation_mode = "dual_port",
		ram_block3a_0.port_a_address_width = 9,
		ram_block3a_0.port_a_data_width = 1,
		ram_block3a_0.port_a_first_address = 0,
		ram_block3a_0.port_a_first_bit_number = 0,
		ram_block3a_0.port_a_last_address = 317,
		ram_block3a_0.port_a_logical_ram_depth = 318,
		ram_block3a_0.port_a_logical_ram_width = 24,
		ram_block3a_0.port_b_address_clear = "none",
		ram_block3a_0.port_b_address_clock = "clock0",
		ram_block3a_0.port_b_address_width = 9,
		ram_block3a_0.port_b_data_out_clear = "none",
		ram_block3a_0.port_b_data_out_clock = "clock0",
		ram_block3a_0.port_b_data_width = 1,
		ram_block3a_0.port_b_first_address = 0,
		ram_block3a_0.port_b_first_bit_number = 0,
		ram_block3a_0.port_b_last_address = 317,
		ram_block3a_0.port_b_logical_ram_depth = 318,
		ram_block3a_0.port_b_logical_ram_width = 24,
		ram_block3a_0.port_b_read_enable_clock = "clock0",
		ram_block3a_0.ram_block_type = "M9K",
		ram_block3a_0.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block3a_1
	( 
	.clk0(clock0),
	.ena0(clocken0),
	.portaaddr({address_a_wire[8:0]}),
	.portadatain({data_a[1]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[8:0]}),
	.portbdataout(wire_ram_block3a_1portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clk1(1'b0),
	.clr0(1'b0),
	.clr1(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbaddrstall(1'b0),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block3a_1.clk0_core_clock_enable = "ena0",
		ram_block3a_1.clk0_input_clock_enable = "ena0",
		ram_block3a_1.clk0_output_clock_enable = "ena0",
		ram_block3a_1.connectivity_checking = "OFF",
		ram_block3a_1.logical_ram_name = "ALTSYNCRAM",
		ram_block3a_1.mixed_port_feed_through_mode = "old",
		ram_block3a_1.operation_mode = "dual_port",
		ram_block3a_1.port_a_address_width = 9,
		ram_block3a_1.port_a_data_width = 1,
		ram_block3a_1.port_a_first_address = 0,
		ram_block3a_1.port_a_first_bit_number = 1,
		ram_block3a_1.port_a_last_address = 317,
		ram_block3a_1.port_a_logical_ram_depth = 318,
		ram_block3a_1.port_a_logical_ram_width = 24,
		ram_block3a_1.port_b_address_clear = "none",
		ram_block3a_1.port_b_address_clock = "clock0",
		ram_block3a_1.port_b_address_width = 9,
		ram_block3a_1.port_b_data_out_clear = "none",
		ram_block3a_1.port_b_data_out_clock = "clock0",
		ram_block3a_1.port_b_data_width = 1,
		ram_block3a_1.port_b_first_address = 0,
		ram_block3a_1.port_b_first_bit_number = 1,
		ram_block3a_1.port_b_last_address = 317,
		ram_block3a_1.port_b_logical_ram_depth = 318,
		ram_block3a_1.port_b_logical_ram_width = 24,
		ram_block3a_1.port_b_read_enable_clock = "clock0",
		ram_block3a_1.ram_block_type = "M9K",
		ram_block3a_1.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block3a_2
	( 
	.clk0(clock0),
	.ena0(clocken0),
	.portaaddr({address_a_wire[8:0]}),
	.portadatain({data_a[2]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[8:0]}),
	.portbdataout(wire_ram_block3a_2portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clk1(1'b0),
	.clr0(1'b0),
	.clr1(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbaddrstall(1'b0),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block3a_2.clk0_core_clock_enable = "ena0",
		ram_block3a_2.clk0_input_clock_enable = "ena0",
		ram_block3a_2.clk0_output_clock_enable = "ena0",
		ram_block3a_2.connectivity_checking = "OFF",
		ram_block3a_2.logical_ram_name = "ALTSYNCRAM",
		ram_block3a_2.mixed_port_feed_through_mode = "old",
		ram_block3a_2.operation_mode = "dual_port",
		ram_block3a_2.port_a_address_width = 9,
		ram_block3a_2.port_a_data_width = 1,
		ram_block3a_2.port_a_first_address = 0,
		ram_block3a_2.port_a_first_bit_number = 2,
		ram_block3a_2.port_a_last_address = 317,
		ram_block3a_2.port_a_logical_ram_depth = 318,
		ram_block3a_2.port_a_logical_ram_width = 24,
		ram_block3a_2.port_b_address_clear = "none",
		ram_block3a_2.port_b_address_clock = "clock0",
		ram_block3a_2.port_b_address_width = 9,
		ram_block3a_2.port_b_data_out_clear = "none",
		ram_block3a_2.port_b_data_out_clock = "clock0",
		ram_block3a_2.port_b_data_width = 1,
		ram_block3a_2.port_b_first_address = 0,
		ram_block3a_2.port_b_first_bit_number = 2,
		ram_block3a_2.port_b_last_address = 317,
		ram_block3a_2.port_b_logical_ram_depth = 318,
		ram_block3a_2.port_b_logical_ram_width = 24,
		ram_block3a_2.port_b_read_enable_clock = "clock0",
		ram_block3a_2.ram_block_type = "M9K",
		ram_block3a_2.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block3a_3
	( 
	.clk0(clock0),
	.ena0(clocken0),
	.portaaddr({address_a_wire[8:0]}),
	.portadatain({data_a[3]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[8:0]}),
	.portbdataout(wire_ram_block3a_3portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clk1(1'b0),
	.clr0(1'b0),
	.clr1(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbaddrstall(1'b0),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block3a_3.clk0_core_clock_enable = "ena0",
		ram_block3a_3.clk0_input_clock_enable = "ena0",
		ram_block3a_3.clk0_output_clock_enable = "ena0",
		ram_block3a_3.connectivity_checking = "OFF",
		ram_block3a_3.logical_ram_name = "ALTSYNCRAM",
		ram_block3a_3.mixed_port_feed_through_mode = "old",
		ram_block3a_3.operation_mode = "dual_port",
		ram_block3a_3.port_a_address_width = 9,
		ram_block3a_3.port_a_data_width = 1,
		ram_block3a_3.port_a_first_address = 0,
		ram_block3a_3.port_a_first_bit_number = 3,
		ram_block3a_3.port_a_last_address = 317,
		ram_block3a_3.port_a_logical_ram_depth = 318,
		ram_block3a_3.port_a_logical_ram_width = 24,
		ram_block3a_3.port_b_address_clear = "none",
		ram_block3a_3.port_b_address_clock = "clock0",
		ram_block3a_3.port_b_address_width = 9,
		ram_block3a_3.port_b_data_out_clear = "none",
		ram_block3a_3.port_b_data_out_clock = "clock0",
		ram_block3a_3.port_b_data_width = 1,
		ram_block3a_3.port_b_first_address = 0,
		ram_block3a_3.port_b_first_bit_number = 3,
		ram_block3a_3.port_b_last_address = 317,
		ram_block3a_3.port_b_logical_ram_depth = 318,
		ram_block3a_3.port_b_logical_ram_width = 24,
		ram_block3a_3.port_b_read_enable_clock = "clock0",
		ram_block3a_3.ram_block_type = "M9K",
		ram_block3a_3.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block3a_4
	( 
	.clk0(clock0),
	.ena0(clocken0),
	.portaaddr({address_a_wire[8:0]}),
	.portadatain({data_a[4]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[8:0]}),
	.portbdataout(wire_ram_block3a_4portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clk1(1'b0),
	.clr0(1'b0),
	.clr1(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbaddrstall(1'b0),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block3a_4.clk0_core_clock_enable = "ena0",
		ram_block3a_4.clk0_input_clock_enable = "ena0",
		ram_block3a_4.clk0_output_clock_enable = "ena0",
		ram_block3a_4.connectivity_checking = "OFF",
		ram_block3a_4.logical_ram_name = "ALTSYNCRAM",
		ram_block3a_4.mixed_port_feed_through_mode = "old",
		ram_block3a_4.operation_mode = "dual_port",
		ram_block3a_4.port_a_address_width = 9,
		ram_block3a_4.port_a_data_width = 1,
		ram_block3a_4.port_a_first_address = 0,
		ram_block3a_4.port_a_first_bit_number = 4,
		ram_block3a_4.port_a_last_address = 317,
		ram_block3a_4.port_a_logical_ram_depth = 318,
		ram_block3a_4.port_a_logical_ram_width = 24,
		ram_block3a_4.port_b_address_clear = "none",
		ram_block3a_4.port_b_address_clock = "clock0",
		ram_block3a_4.port_b_address_width = 9,
		ram_block3a_4.port_b_data_out_clear = "none",
		ram_block3a_4.port_b_data_out_clock = "clock0",
		ram_block3a_4.port_b_data_width = 1,
		ram_block3a_4.port_b_first_address = 0,
		ram_block3a_4.port_b_first_bit_number = 4,
		ram_block3a_4.port_b_last_address = 317,
		ram_block3a_4.port_b_logical_ram_depth = 318,
		ram_block3a_4.port_b_logical_ram_width = 24,
		ram_block3a_4.port_b_read_enable_clock = "clock0",
		ram_block3a_4.ram_block_type = "M9K",
		ram_block3a_4.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block3a_5
	( 
	.clk0(clock0),
	.ena0(clocken0),
	.portaaddr({address_a_wire[8:0]}),
	.portadatain({data_a[5]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[8:0]}),
	.portbdataout(wire_ram_block3a_5portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clk1(1'b0),
	.clr0(1'b0),
	.clr1(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbaddrstall(1'b0),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block3a_5.clk0_core_clock_enable = "ena0",
		ram_block3a_5.clk0_input_clock_enable = "ena0",
		ram_block3a_5.clk0_output_clock_enable = "ena0",
		ram_block3a_5.connectivity_checking = "OFF",
		ram_block3a_5.logical_ram_name = "ALTSYNCRAM",
		ram_block3a_5.mixed_port_feed_through_mode = "old",
		ram_block3a_5.operation_mode = "dual_port",
		ram_block3a_5.port_a_address_width = 9,
		ram_block3a_5.port_a_data_width = 1,
		ram_block3a_5.port_a_first_address = 0,
		ram_block3a_5.port_a_first_bit_number = 5,
		ram_block3a_5.port_a_last_address = 317,
		ram_block3a_5.port_a_logical_ram_depth = 318,
		ram_block3a_5.port_a_logical_ram_width = 24,
		ram_block3a_5.port_b_address_clear = "none",
		ram_block3a_5.port_b_address_clock = "clock0",
		ram_block3a_5.port_b_address_width = 9,
		ram_block3a_5.port_b_data_out_clear = "none",
		ram_block3a_5.port_b_data_out_clock = "clock0",
		ram_block3a_5.port_b_data_width = 1,
		ram_block3a_5.port_b_first_address = 0,
		ram_block3a_5.port_b_first_bit_number = 5,
		ram_block3a_5.port_b_last_address = 317,
		ram_block3a_5.port_b_logical_ram_depth = 318,
		ram_block3a_5.port_b_logical_ram_width = 24,
		ram_block3a_5.port_b_read_enable_clock = "clock0",
		ram_block3a_5.ram_block_type = "M9K",
		ram_block3a_5.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block3a_6
	( 
	.clk0(clock0),
	.ena0(clocken0),
	.portaaddr({address_a_wire[8:0]}),
	.portadatain({data_a[6]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[8:0]}),
	.portbdataout(wire_ram_block3a_6portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clk1(1'b0),
	.clr0(1'b0),
	.clr1(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbaddrstall(1'b0),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block3a_6.clk0_core_clock_enable = "ena0",
		ram_block3a_6.clk0_input_clock_enable = "ena0",
		ram_block3a_6.clk0_output_clock_enable = "ena0",
		ram_block3a_6.connectivity_checking = "OFF",
		ram_block3a_6.logical_ram_name = "ALTSYNCRAM",
		ram_block3a_6.mixed_port_feed_through_mode = "old",
		ram_block3a_6.operation_mode = "dual_port",
		ram_block3a_6.port_a_address_width = 9,
		ram_block3a_6.port_a_data_width = 1,
		ram_block3a_6.port_a_first_address = 0,
		ram_block3a_6.port_a_first_bit_number = 6,
		ram_block3a_6.port_a_last_address = 317,
		ram_block3a_6.port_a_logical_ram_depth = 318,
		ram_block3a_6.port_a_logical_ram_width = 24,
		ram_block3a_6.port_b_address_clear = "none",
		ram_block3a_6.port_b_address_clock = "clock0",
		ram_block3a_6.port_b_address_width = 9,
		ram_block3a_6.port_b_data_out_clear = "none",
		ram_block3a_6.port_b_data_out_clock = "clock0",
		ram_block3a_6.port_b_data_width = 1,
		ram_block3a_6.port_b_first_address = 0,
		ram_block3a_6.port_b_first_bit_number = 6,
		ram_block3a_6.port_b_last_address = 317,
		ram_block3a_6.port_b_logical_ram_depth = 318,
		ram_block3a_6.port_b_logical_ram_width = 24,
		ram_block3a_6.port_b_read_enable_clock = "clock0",
		ram_block3a_6.ram_block_type = "M9K",
		ram_block3a_6.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block3a_7
	( 
	.clk0(clock0),
	.ena0(clocken0),
	.portaaddr({address_a_wire[8:0]}),
	.portadatain({data_a[7]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[8:0]}),
	.portbdataout(wire_ram_block3a_7portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clk1(1'b0),
	.clr0(1'b0),
	.clr1(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbaddrstall(1'b0),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block3a_7.clk0_core_clock_enable = "ena0",
		ram_block3a_7.clk0_input_clock_enable = "ena0",
		ram_block3a_7.clk0_output_clock_enable = "ena0",
		ram_block3a_7.connectivity_checking = "OFF",
		ram_block3a_7.logical_ram_name = "ALTSYNCRAM",
		ram_block3a_7.mixed_port_feed_through_mode = "old",
		ram_block3a_7.operation_mode = "dual_port",
		ram_block3a_7.port_a_address_width = 9,
		ram_block3a_7.port_a_data_width = 1,
		ram_block3a_7.port_a_first_address = 0,
		ram_block3a_7.port_a_first_bit_number = 7,
		ram_block3a_7.port_a_last_address = 317,
		ram_block3a_7.port_a_logical_ram_depth = 318,
		ram_block3a_7.port_a_logical_ram_width = 24,
		ram_block3a_7.port_b_address_clear = "none",
		ram_block3a_7.port_b_address_clock = "clock0",
		ram_block3a_7.port_b_address_width = 9,
		ram_block3a_7.port_b_data_out_clear = "none",
		ram_block3a_7.port_b_data_out_clock = "clock0",
		ram_block3a_7.port_b_data_width = 1,
		ram_block3a_7.port_b_first_address = 0,
		ram_block3a_7.port_b_first_bit_number = 7,
		ram_block3a_7.port_b_last_address = 317,
		ram_block3a_7.port_b_logical_ram_depth = 318,
		ram_block3a_7.port_b_logical_ram_width = 24,
		ram_block3a_7.port_b_read_enable_clock = "clock0",
		ram_block3a_7.ram_block_type = "M9K",
		ram_block3a_7.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block3a_8
	( 
	.clk0(clock0),
	.ena0(clocken0),
	.portaaddr({address_a_wire[8:0]}),
	.portadatain({data_a[8]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[8:0]}),
	.portbdataout(wire_ram_block3a_8portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clk1(1'b0),
	.clr0(1'b0),
	.clr1(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbaddrstall(1'b0),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block3a_8.clk0_core_clock_enable = "ena0",
		ram_block3a_8.clk0_input_clock_enable = "ena0",
		ram_block3a_8.clk0_output_clock_enable = "ena0",
		ram_block3a_8.connectivity_checking = "OFF",
		ram_block3a_8.logical_ram_name = "ALTSYNCRAM",
		ram_block3a_8.mixed_port_feed_through_mode = "old",
		ram_block3a_8.operation_mode = "dual_port",
		ram_block3a_8.port_a_address_width = 9,
		ram_block3a_8.port_a_data_width = 1,
		ram_block3a_8.port_a_first_address = 0,
		ram_block3a_8.port_a_first_bit_number = 8,
		ram_block3a_8.port_a_last_address = 317,
		ram_block3a_8.port_a_logical_ram_depth = 318,
		ram_block3a_8.port_a_logical_ram_width = 24,
		ram_block3a_8.port_b_address_clear = "none",
		ram_block3a_8.port_b_address_clock = "clock0",
		ram_block3a_8.port_b_address_width = 9,
		ram_block3a_8.port_b_data_out_clear = "none",
		ram_block3a_8.port_b_data_out_clock = "clock0",
		ram_block3a_8.port_b_data_width = 1,
		ram_block3a_8.port_b_first_address = 0,
		ram_block3a_8.port_b_first_bit_number = 8,
		ram_block3a_8.port_b_last_address = 317,
		ram_block3a_8.port_b_logical_ram_depth = 318,
		ram_block3a_8.port_b_logical_ram_width = 24,
		ram_block3a_8.port_b_read_enable_clock = "clock0",
		ram_block3a_8.ram_block_type = "M9K",
		ram_block3a_8.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block3a_9
	( 
	.clk0(clock0),
	.ena0(clocken0),
	.portaaddr({address_a_wire[8:0]}),
	.portadatain({data_a[9]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[8:0]}),
	.portbdataout(wire_ram_block3a_9portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clk1(1'b0),
	.clr0(1'b0),
	.clr1(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbaddrstall(1'b0),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block3a_9.clk0_core_clock_enable = "ena0",
		ram_block3a_9.clk0_input_clock_enable = "ena0",
		ram_block3a_9.clk0_output_clock_enable = "ena0",
		ram_block3a_9.connectivity_checking = "OFF",
		ram_block3a_9.logical_ram_name = "ALTSYNCRAM",
		ram_block3a_9.mixed_port_feed_through_mode = "old",
		ram_block3a_9.operation_mode = "dual_port",
		ram_block3a_9.port_a_address_width = 9,
		ram_block3a_9.port_a_data_width = 1,
		ram_block3a_9.port_a_first_address = 0,
		ram_block3a_9.port_a_first_bit_number = 9,
		ram_block3a_9.port_a_last_address = 317,
		ram_block3a_9.port_a_logical_ram_depth = 318,
		ram_block3a_9.port_a_logical_ram_width = 24,
		ram_block3a_9.port_b_address_clear = "none",
		ram_block3a_9.port_b_address_clock = "clock0",
		ram_block3a_9.port_b_address_width = 9,
		ram_block3a_9.port_b_data_out_clear = "none",
		ram_block3a_9.port_b_data_out_clock = "clock0",
		ram_block3a_9.port_b_data_width = 1,
		ram_block3a_9.port_b_first_address = 0,
		ram_block3a_9.port_b_first_bit_number = 9,
		ram_block3a_9.port_b_last_address = 317,
		ram_block3a_9.port_b_logical_ram_depth = 318,
		ram_block3a_9.port_b_logical_ram_width = 24,
		ram_block3a_9.port_b_read_enable_clock = "clock0",
		ram_block3a_9.ram_block_type = "M9K",
		ram_block3a_9.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block3a_10
	( 
	.clk0(clock0),
	.ena0(clocken0),
	.portaaddr({address_a_wire[8:0]}),
	.portadatain({data_a[10]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[8:0]}),
	.portbdataout(wire_ram_block3a_10portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clk1(1'b0),
	.clr0(1'b0),
	.clr1(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbaddrstall(1'b0),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block3a_10.clk0_core_clock_enable = "ena0",
		ram_block3a_10.clk0_input_clock_enable = "ena0",
		ram_block3a_10.clk0_output_clock_enable = "ena0",
		ram_block3a_10.connectivity_checking = "OFF",
		ram_block3a_10.logical_ram_name = "ALTSYNCRAM",
		ram_block3a_10.mixed_port_feed_through_mode = "old",
		ram_block3a_10.operation_mode = "dual_port",
		ram_block3a_10.port_a_address_width = 9,
		ram_block3a_10.port_a_data_width = 1,
		ram_block3a_10.port_a_first_address = 0,
		ram_block3a_10.port_a_first_bit_number = 10,
		ram_block3a_10.port_a_last_address = 317,
		ram_block3a_10.port_a_logical_ram_depth = 318,
		ram_block3a_10.port_a_logical_ram_width = 24,
		ram_block3a_10.port_b_address_clear = "none",
		ram_block3a_10.port_b_address_clock = "clock0",
		ram_block3a_10.port_b_address_width = 9,
		ram_block3a_10.port_b_data_out_clear = "none",
		ram_block3a_10.port_b_data_out_clock = "clock0",
		ram_block3a_10.port_b_data_width = 1,
		ram_block3a_10.port_b_first_address = 0,
		ram_block3a_10.port_b_first_bit_number = 10,
		ram_block3a_10.port_b_last_address = 317,
		ram_block3a_10.port_b_logical_ram_depth = 318,
		ram_block3a_10.port_b_logical_ram_width = 24,
		ram_block3a_10.port_b_read_enable_clock = "clock0",
		ram_block3a_10.ram_block_type = "M9K",
		ram_block3a_10.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block3a_11
	( 
	.clk0(clock0),
	.ena0(clocken0),
	.portaaddr({address_a_wire[8:0]}),
	.portadatain({data_a[11]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[8:0]}),
	.portbdataout(wire_ram_block3a_11portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clk1(1'b0),
	.clr0(1'b0),
	.clr1(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbaddrstall(1'b0),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block3a_11.clk0_core_clock_enable = "ena0",
		ram_block3a_11.clk0_input_clock_enable = "ena0",
		ram_block3a_11.clk0_output_clock_enable = "ena0",
		ram_block3a_11.connectivity_checking = "OFF",
		ram_block3a_11.logical_ram_name = "ALTSYNCRAM",
		ram_block3a_11.mixed_port_feed_through_mode = "old",
		ram_block3a_11.operation_mode = "dual_port",
		ram_block3a_11.port_a_address_width = 9,
		ram_block3a_11.port_a_data_width = 1,
		ram_block3a_11.port_a_first_address = 0,
		ram_block3a_11.port_a_first_bit_number = 11,
		ram_block3a_11.port_a_last_address = 317,
		ram_block3a_11.port_a_logical_ram_depth = 318,
		ram_block3a_11.port_a_logical_ram_width = 24,
		ram_block3a_11.port_b_address_clear = "none",
		ram_block3a_11.port_b_address_clock = "clock0",
		ram_block3a_11.port_b_address_width = 9,
		ram_block3a_11.port_b_data_out_clear = "none",
		ram_block3a_11.port_b_data_out_clock = "clock0",
		ram_block3a_11.port_b_data_width = 1,
		ram_block3a_11.port_b_first_address = 0,
		ram_block3a_11.port_b_first_bit_number = 11,
		ram_block3a_11.port_b_last_address = 317,
		ram_block3a_11.port_b_logical_ram_depth = 318,
		ram_block3a_11.port_b_logical_ram_width = 24,
		ram_block3a_11.port_b_read_enable_clock = "clock0",
		ram_block3a_11.ram_block_type = "M9K",
		ram_block3a_11.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block3a_12
	( 
	.clk0(clock0),
	.ena0(clocken0),
	.portaaddr({address_a_wire[8:0]}),
	.portadatain({data_a[12]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[8:0]}),
	.portbdataout(wire_ram_block3a_12portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clk1(1'b0),
	.clr0(1'b0),
	.clr1(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbaddrstall(1'b0),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block3a_12.clk0_core_clock_enable = "ena0",
		ram_block3a_12.clk0_input_clock_enable = "ena0",
		ram_block3a_12.clk0_output_clock_enable = "ena0",
		ram_block3a_12.connectivity_checking = "OFF",
		ram_block3a_12.logical_ram_name = "ALTSYNCRAM",
		ram_block3a_12.mixed_port_feed_through_mode = "old",
		ram_block3a_12.operation_mode = "dual_port",
		ram_block3a_12.port_a_address_width = 9,
		ram_block3a_12.port_a_data_width = 1,
		ram_block3a_12.port_a_first_address = 0,
		ram_block3a_12.port_a_first_bit_number = 12,
		ram_block3a_12.port_a_last_address = 317,
		ram_block3a_12.port_a_logical_ram_depth = 318,
		ram_block3a_12.port_a_logical_ram_width = 24,
		ram_block3a_12.port_b_address_clear = "none",
		ram_block3a_12.port_b_address_clock = "clock0",
		ram_block3a_12.port_b_address_width = 9,
		ram_block3a_12.port_b_data_out_clear = "none",
		ram_block3a_12.port_b_data_out_clock = "clock0",
		ram_block3a_12.port_b_data_width = 1,
		ram_block3a_12.port_b_first_address = 0,
		ram_block3a_12.port_b_first_bit_number = 12,
		ram_block3a_12.port_b_last_address = 317,
		ram_block3a_12.port_b_logical_ram_depth = 318,
		ram_block3a_12.port_b_logical_ram_width = 24,
		ram_block3a_12.port_b_read_enable_clock = "clock0",
		ram_block3a_12.ram_block_type = "M9K",
		ram_block3a_12.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block3a_13
	( 
	.clk0(clock0),
	.ena0(clocken0),
	.portaaddr({address_a_wire[8:0]}),
	.portadatain({data_a[13]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[8:0]}),
	.portbdataout(wire_ram_block3a_13portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clk1(1'b0),
	.clr0(1'b0),
	.clr1(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbaddrstall(1'b0),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block3a_13.clk0_core_clock_enable = "ena0",
		ram_block3a_13.clk0_input_clock_enable = "ena0",
		ram_block3a_13.clk0_output_clock_enable = "ena0",
		ram_block3a_13.connectivity_checking = "OFF",
		ram_block3a_13.logical_ram_name = "ALTSYNCRAM",
		ram_block3a_13.mixed_port_feed_through_mode = "old",
		ram_block3a_13.operation_mode = "dual_port",
		ram_block3a_13.port_a_address_width = 9,
		ram_block3a_13.port_a_data_width = 1,
		ram_block3a_13.port_a_first_address = 0,
		ram_block3a_13.port_a_first_bit_number = 13,
		ram_block3a_13.port_a_last_address = 317,
		ram_block3a_13.port_a_logical_ram_depth = 318,
		ram_block3a_13.port_a_logical_ram_width = 24,
		ram_block3a_13.port_b_address_clear = "none",
		ram_block3a_13.port_b_address_clock = "clock0",
		ram_block3a_13.port_b_address_width = 9,
		ram_block3a_13.port_b_data_out_clear = "none",
		ram_block3a_13.port_b_data_out_clock = "clock0",
		ram_block3a_13.port_b_data_width = 1,
		ram_block3a_13.port_b_first_address = 0,
		ram_block3a_13.port_b_first_bit_number = 13,
		ram_block3a_13.port_b_last_address = 317,
		ram_block3a_13.port_b_logical_ram_depth = 318,
		ram_block3a_13.port_b_logical_ram_width = 24,
		ram_block3a_13.port_b_read_enable_clock = "clock0",
		ram_block3a_13.ram_block_type = "M9K",
		ram_block3a_13.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block3a_14
	( 
	.clk0(clock0),
	.ena0(clocken0),
	.portaaddr({address_a_wire[8:0]}),
	.portadatain({data_a[14]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[8:0]}),
	.portbdataout(wire_ram_block3a_14portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clk1(1'b0),
	.clr0(1'b0),
	.clr1(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbaddrstall(1'b0),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block3a_14.clk0_core_clock_enable = "ena0",
		ram_block3a_14.clk0_input_clock_enable = "ena0",
		ram_block3a_14.clk0_output_clock_enable = "ena0",
		ram_block3a_14.connectivity_checking = "OFF",
		ram_block3a_14.logical_ram_name = "ALTSYNCRAM",
		ram_block3a_14.mixed_port_feed_through_mode = "old",
		ram_block3a_14.operation_mode = "dual_port",
		ram_block3a_14.port_a_address_width = 9,
		ram_block3a_14.port_a_data_width = 1,
		ram_block3a_14.port_a_first_address = 0,
		ram_block3a_14.port_a_first_bit_number = 14,
		ram_block3a_14.port_a_last_address = 317,
		ram_block3a_14.port_a_logical_ram_depth = 318,
		ram_block3a_14.port_a_logical_ram_width = 24,
		ram_block3a_14.port_b_address_clear = "none",
		ram_block3a_14.port_b_address_clock = "clock0",
		ram_block3a_14.port_b_address_width = 9,
		ram_block3a_14.port_b_data_out_clear = "none",
		ram_block3a_14.port_b_data_out_clock = "clock0",
		ram_block3a_14.port_b_data_width = 1,
		ram_block3a_14.port_b_first_address = 0,
		ram_block3a_14.port_b_first_bit_number = 14,
		ram_block3a_14.port_b_last_address = 317,
		ram_block3a_14.port_b_logical_ram_depth = 318,
		ram_block3a_14.port_b_logical_ram_width = 24,
		ram_block3a_14.port_b_read_enable_clock = "clock0",
		ram_block3a_14.ram_block_type = "M9K",
		ram_block3a_14.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block3a_15
	( 
	.clk0(clock0),
	.ena0(clocken0),
	.portaaddr({address_a_wire[8:0]}),
	.portadatain({data_a[15]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[8:0]}),
	.portbdataout(wire_ram_block3a_15portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clk1(1'b0),
	.clr0(1'b0),
	.clr1(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbaddrstall(1'b0),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block3a_15.clk0_core_clock_enable = "ena0",
		ram_block3a_15.clk0_input_clock_enable = "ena0",
		ram_block3a_15.clk0_output_clock_enable = "ena0",
		ram_block3a_15.connectivity_checking = "OFF",
		ram_block3a_15.logical_ram_name = "ALTSYNCRAM",
		ram_block3a_15.mixed_port_feed_through_mode = "old",
		ram_block3a_15.operation_mode = "dual_port",
		ram_block3a_15.port_a_address_width = 9,
		ram_block3a_15.port_a_data_width = 1,
		ram_block3a_15.port_a_first_address = 0,
		ram_block3a_15.port_a_first_bit_number = 15,
		ram_block3a_15.port_a_last_address = 317,
		ram_block3a_15.port_a_logical_ram_depth = 318,
		ram_block3a_15.port_a_logical_ram_width = 24,
		ram_block3a_15.port_b_address_clear = "none",
		ram_block3a_15.port_b_address_clock = "clock0",
		ram_block3a_15.port_b_address_width = 9,
		ram_block3a_15.port_b_data_out_clear = "none",
		ram_block3a_15.port_b_data_out_clock = "clock0",
		ram_block3a_15.port_b_data_width = 1,
		ram_block3a_15.port_b_first_address = 0,
		ram_block3a_15.port_b_first_bit_number = 15,
		ram_block3a_15.port_b_last_address = 317,
		ram_block3a_15.port_b_logical_ram_depth = 318,
		ram_block3a_15.port_b_logical_ram_width = 24,
		ram_block3a_15.port_b_read_enable_clock = "clock0",
		ram_block3a_15.ram_block_type = "M9K",
		ram_block3a_15.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block3a_16
	( 
	.clk0(clock0),
	.ena0(clocken0),
	.portaaddr({address_a_wire[8:0]}),
	.portadatain({data_a[16]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[8:0]}),
	.portbdataout(wire_ram_block3a_16portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clk1(1'b0),
	.clr0(1'b0),
	.clr1(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbaddrstall(1'b0),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block3a_16.clk0_core_clock_enable = "ena0",
		ram_block3a_16.clk0_input_clock_enable = "ena0",
		ram_block3a_16.clk0_output_clock_enable = "ena0",
		ram_block3a_16.connectivity_checking = "OFF",
		ram_block3a_16.logical_ram_name = "ALTSYNCRAM",
		ram_block3a_16.mixed_port_feed_through_mode = "old",
		ram_block3a_16.operation_mode = "dual_port",
		ram_block3a_16.port_a_address_width = 9,
		ram_block3a_16.port_a_data_width = 1,
		ram_block3a_16.port_a_first_address = 0,
		ram_block3a_16.port_a_first_bit_number = 16,
		ram_block3a_16.port_a_last_address = 317,
		ram_block3a_16.port_a_logical_ram_depth = 318,
		ram_block3a_16.port_a_logical_ram_width = 24,
		ram_block3a_16.port_b_address_clear = "none",
		ram_block3a_16.port_b_address_clock = "clock0",
		ram_block3a_16.port_b_address_width = 9,
		ram_block3a_16.port_b_data_out_clear = "none",
		ram_block3a_16.port_b_data_out_clock = "clock0",
		ram_block3a_16.port_b_data_width = 1,
		ram_block3a_16.port_b_first_address = 0,
		ram_block3a_16.port_b_first_bit_number = 16,
		ram_block3a_16.port_b_last_address = 317,
		ram_block3a_16.port_b_logical_ram_depth = 318,
		ram_block3a_16.port_b_logical_ram_width = 24,
		ram_block3a_16.port_b_read_enable_clock = "clock0",
		ram_block3a_16.ram_block_type = "M9K",
		ram_block3a_16.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block3a_17
	( 
	.clk0(clock0),
	.ena0(clocken0),
	.portaaddr({address_a_wire[8:0]}),
	.portadatain({data_a[17]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[8:0]}),
	.portbdataout(wire_ram_block3a_17portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clk1(1'b0),
	.clr0(1'b0),
	.clr1(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbaddrstall(1'b0),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block3a_17.clk0_core_clock_enable = "ena0",
		ram_block3a_17.clk0_input_clock_enable = "ena0",
		ram_block3a_17.clk0_output_clock_enable = "ena0",
		ram_block3a_17.connectivity_checking = "OFF",
		ram_block3a_17.logical_ram_name = "ALTSYNCRAM",
		ram_block3a_17.mixed_port_feed_through_mode = "old",
		ram_block3a_17.operation_mode = "dual_port",
		ram_block3a_17.port_a_address_width = 9,
		ram_block3a_17.port_a_data_width = 1,
		ram_block3a_17.port_a_first_address = 0,
		ram_block3a_17.port_a_first_bit_number = 17,
		ram_block3a_17.port_a_last_address = 317,
		ram_block3a_17.port_a_logical_ram_depth = 318,
		ram_block3a_17.port_a_logical_ram_width = 24,
		ram_block3a_17.port_b_address_clear = "none",
		ram_block3a_17.port_b_address_clock = "clock0",
		ram_block3a_17.port_b_address_width = 9,
		ram_block3a_17.port_b_data_out_clear = "none",
		ram_block3a_17.port_b_data_out_clock = "clock0",
		ram_block3a_17.port_b_data_width = 1,
		ram_block3a_17.port_b_first_address = 0,
		ram_block3a_17.port_b_first_bit_number = 17,
		ram_block3a_17.port_b_last_address = 317,
		ram_block3a_17.port_b_logical_ram_depth = 318,
		ram_block3a_17.port_b_logical_ram_width = 24,
		ram_block3a_17.port_b_read_enable_clock = "clock0",
		ram_block3a_17.ram_block_type = "M9K",
		ram_block3a_17.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block3a_18
	( 
	.clk0(clock0),
	.ena0(clocken0),
	.portaaddr({address_a_wire[8:0]}),
	.portadatain({data_a[18]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[8:0]}),
	.portbdataout(wire_ram_block3a_18portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clk1(1'b0),
	.clr0(1'b0),
	.clr1(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbaddrstall(1'b0),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block3a_18.clk0_core_clock_enable = "ena0",
		ram_block3a_18.clk0_input_clock_enable = "ena0",
		ram_block3a_18.clk0_output_clock_enable = "ena0",
		ram_block3a_18.connectivity_checking = "OFF",
		ram_block3a_18.logical_ram_name = "ALTSYNCRAM",
		ram_block3a_18.mixed_port_feed_through_mode = "old",
		ram_block3a_18.operation_mode = "dual_port",
		ram_block3a_18.port_a_address_width = 9,
		ram_block3a_18.port_a_data_width = 1,
		ram_block3a_18.port_a_first_address = 0,
		ram_block3a_18.port_a_first_bit_number = 18,
		ram_block3a_18.port_a_last_address = 317,
		ram_block3a_18.port_a_logical_ram_depth = 318,
		ram_block3a_18.port_a_logical_ram_width = 24,
		ram_block3a_18.port_b_address_clear = "none",
		ram_block3a_18.port_b_address_clock = "clock0",
		ram_block3a_18.port_b_address_width = 9,
		ram_block3a_18.port_b_data_out_clear = "none",
		ram_block3a_18.port_b_data_out_clock = "clock0",
		ram_block3a_18.port_b_data_width = 1,
		ram_block3a_18.port_b_first_address = 0,
		ram_block3a_18.port_b_first_bit_number = 18,
		ram_block3a_18.port_b_last_address = 317,
		ram_block3a_18.port_b_logical_ram_depth = 318,
		ram_block3a_18.port_b_logical_ram_width = 24,
		ram_block3a_18.port_b_read_enable_clock = "clock0",
		ram_block3a_18.ram_block_type = "M9K",
		ram_block3a_18.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block3a_19
	( 
	.clk0(clock0),
	.ena0(clocken0),
	.portaaddr({address_a_wire[8:0]}),
	.portadatain({data_a[19]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[8:0]}),
	.portbdataout(wire_ram_block3a_19portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clk1(1'b0),
	.clr0(1'b0),
	.clr1(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbaddrstall(1'b0),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block3a_19.clk0_core_clock_enable = "ena0",
		ram_block3a_19.clk0_input_clock_enable = "ena0",
		ram_block3a_19.clk0_output_clock_enable = "ena0",
		ram_block3a_19.connectivity_checking = "OFF",
		ram_block3a_19.logical_ram_name = "ALTSYNCRAM",
		ram_block3a_19.mixed_port_feed_through_mode = "old",
		ram_block3a_19.operation_mode = "dual_port",
		ram_block3a_19.port_a_address_width = 9,
		ram_block3a_19.port_a_data_width = 1,
		ram_block3a_19.port_a_first_address = 0,
		ram_block3a_19.port_a_first_bit_number = 19,
		ram_block3a_19.port_a_last_address = 317,
		ram_block3a_19.port_a_logical_ram_depth = 318,
		ram_block3a_19.port_a_logical_ram_width = 24,
		ram_block3a_19.port_b_address_clear = "none",
		ram_block3a_19.port_b_address_clock = "clock0",
		ram_block3a_19.port_b_address_width = 9,
		ram_block3a_19.port_b_data_out_clear = "none",
		ram_block3a_19.port_b_data_out_clock = "clock0",
		ram_block3a_19.port_b_data_width = 1,
		ram_block3a_19.port_b_first_address = 0,
		ram_block3a_19.port_b_first_bit_number = 19,
		ram_block3a_19.port_b_last_address = 317,
		ram_block3a_19.port_b_logical_ram_depth = 318,
		ram_block3a_19.port_b_logical_ram_width = 24,
		ram_block3a_19.port_b_read_enable_clock = "clock0",
		ram_block3a_19.ram_block_type = "M9K",
		ram_block3a_19.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block3a_20
	( 
	.clk0(clock0),
	.ena0(clocken0),
	.portaaddr({address_a_wire[8:0]}),
	.portadatain({data_a[20]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[8:0]}),
	.portbdataout(wire_ram_block3a_20portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clk1(1'b0),
	.clr0(1'b0),
	.clr1(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbaddrstall(1'b0),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block3a_20.clk0_core_clock_enable = "ena0",
		ram_block3a_20.clk0_input_clock_enable = "ena0",
		ram_block3a_20.clk0_output_clock_enable = "ena0",
		ram_block3a_20.connectivity_checking = "OFF",
		ram_block3a_20.logical_ram_name = "ALTSYNCRAM",
		ram_block3a_20.mixed_port_feed_through_mode = "old",
		ram_block3a_20.operation_mode = "dual_port",
		ram_block3a_20.port_a_address_width = 9,
		ram_block3a_20.port_a_data_width = 1,
		ram_block3a_20.port_a_first_address = 0,
		ram_block3a_20.port_a_first_bit_number = 20,
		ram_block3a_20.port_a_last_address = 317,
		ram_block3a_20.port_a_logical_ram_depth = 318,
		ram_block3a_20.port_a_logical_ram_width = 24,
		ram_block3a_20.port_b_address_clear = "none",
		ram_block3a_20.port_b_address_clock = "clock0",
		ram_block3a_20.port_b_address_width = 9,
		ram_block3a_20.port_b_data_out_clear = "none",
		ram_block3a_20.port_b_data_out_clock = "clock0",
		ram_block3a_20.port_b_data_width = 1,
		ram_block3a_20.port_b_first_address = 0,
		ram_block3a_20.port_b_first_bit_number = 20,
		ram_block3a_20.port_b_last_address = 317,
		ram_block3a_20.port_b_logical_ram_depth = 318,
		ram_block3a_20.port_b_logical_ram_width = 24,
		ram_block3a_20.port_b_read_enable_clock = "clock0",
		ram_block3a_20.ram_block_type = "M9K",
		ram_block3a_20.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block3a_21
	( 
	.clk0(clock0),
	.ena0(clocken0),
	.portaaddr({address_a_wire[8:0]}),
	.portadatain({data_a[21]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[8:0]}),
	.portbdataout(wire_ram_block3a_21portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clk1(1'b0),
	.clr0(1'b0),
	.clr1(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbaddrstall(1'b0),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block3a_21.clk0_core_clock_enable = "ena0",
		ram_block3a_21.clk0_input_clock_enable = "ena0",
		ram_block3a_21.clk0_output_clock_enable = "ena0",
		ram_block3a_21.connectivity_checking = "OFF",
		ram_block3a_21.logical_ram_name = "ALTSYNCRAM",
		ram_block3a_21.mixed_port_feed_through_mode = "old",
		ram_block3a_21.operation_mode = "dual_port",
		ram_block3a_21.port_a_address_width = 9,
		ram_block3a_21.port_a_data_width = 1,
		ram_block3a_21.port_a_first_address = 0,
		ram_block3a_21.port_a_first_bit_number = 21,
		ram_block3a_21.port_a_last_address = 317,
		ram_block3a_21.port_a_logical_ram_depth = 318,
		ram_block3a_21.port_a_logical_ram_width = 24,
		ram_block3a_21.port_b_address_clear = "none",
		ram_block3a_21.port_b_address_clock = "clock0",
		ram_block3a_21.port_b_address_width = 9,
		ram_block3a_21.port_b_data_out_clear = "none",
		ram_block3a_21.port_b_data_out_clock = "clock0",
		ram_block3a_21.port_b_data_width = 1,
		ram_block3a_21.port_b_first_address = 0,
		ram_block3a_21.port_b_first_bit_number = 21,
		ram_block3a_21.port_b_last_address = 317,
		ram_block3a_21.port_b_logical_ram_depth = 318,
		ram_block3a_21.port_b_logical_ram_width = 24,
		ram_block3a_21.port_b_read_enable_clock = "clock0",
		ram_block3a_21.ram_block_type = "M9K",
		ram_block3a_21.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block3a_22
	( 
	.clk0(clock0),
	.ena0(clocken0),
	.portaaddr({address_a_wire[8:0]}),
	.portadatain({data_a[22]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[8:0]}),
	.portbdataout(wire_ram_block3a_22portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clk1(1'b0),
	.clr0(1'b0),
	.clr1(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbaddrstall(1'b0),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block3a_22.clk0_core_clock_enable = "ena0",
		ram_block3a_22.clk0_input_clock_enable = "ena0",
		ram_block3a_22.clk0_output_clock_enable = "ena0",
		ram_block3a_22.connectivity_checking = "OFF",
		ram_block3a_22.logical_ram_name = "ALTSYNCRAM",
		ram_block3a_22.mixed_port_feed_through_mode = "old",
		ram_block3a_22.operation_mode = "dual_port",
		ram_block3a_22.port_a_address_width = 9,
		ram_block3a_22.port_a_data_width = 1,
		ram_block3a_22.port_a_first_address = 0,
		ram_block3a_22.port_a_first_bit_number = 22,
		ram_block3a_22.port_a_last_address = 317,
		ram_block3a_22.port_a_logical_ram_depth = 318,
		ram_block3a_22.port_a_logical_ram_width = 24,
		ram_block3a_22.port_b_address_clear = "none",
		ram_block3a_22.port_b_address_clock = "clock0",
		ram_block3a_22.port_b_address_width = 9,
		ram_block3a_22.port_b_data_out_clear = "none",
		ram_block3a_22.port_b_data_out_clock = "clock0",
		ram_block3a_22.port_b_data_width = 1,
		ram_block3a_22.port_b_first_address = 0,
		ram_block3a_22.port_b_first_bit_number = 22,
		ram_block3a_22.port_b_last_address = 317,
		ram_block3a_22.port_b_logical_ram_depth = 318,
		ram_block3a_22.port_b_logical_ram_width = 24,
		ram_block3a_22.port_b_read_enable_clock = "clock0",
		ram_block3a_22.ram_block_type = "M9K",
		ram_block3a_22.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block3a_23
	( 
	.clk0(clock0),
	.ena0(clocken0),
	.portaaddr({address_a_wire[8:0]}),
	.portadatain({data_a[23]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[8:0]}),
	.portbdataout(wire_ram_block3a_23portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clk1(1'b0),
	.clr0(1'b0),
	.clr1(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbaddrstall(1'b0),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block3a_23.clk0_core_clock_enable = "ena0",
		ram_block3a_23.clk0_input_clock_enable = "ena0",
		ram_block3a_23.clk0_output_clock_enable = "ena0",
		ram_block3a_23.connectivity_checking = "OFF",
		ram_block3a_23.logical_ram_name = "ALTSYNCRAM",
		ram_block3a_23.mixed_port_feed_through_mode = "old",
		ram_block3a_23.operation_mode = "dual_port",
		ram_block3a_23.port_a_address_width = 9,
		ram_block3a_23.port_a_data_width = 1,
		ram_block3a_23.port_a_first_address = 0,
		ram_block3a_23.port_a_first_bit_number = 23,
		ram_block3a_23.port_a_last_address = 317,
		ram_block3a_23.port_a_logical_ram_depth = 318,
		ram_block3a_23.port_a_logical_ram_width = 24,
		ram_block3a_23.port_b_address_clear = "none",
		ram_block3a_23.port_b_address_clock = "clock0",
		ram_block3a_23.port_b_address_width = 9,
		ram_block3a_23.port_b_data_out_clear = "none",
		ram_block3a_23.port_b_data_out_clock = "clock0",
		ram_block3a_23.port_b_data_width = 1,
		ram_block3a_23.port_b_first_address = 0,
		ram_block3a_23.port_b_first_bit_number = 23,
		ram_block3a_23.port_b_last_address = 317,
		ram_block3a_23.port_b_logical_ram_depth = 318,
		ram_block3a_23.port_b_logical_ram_width = 24,
		ram_block3a_23.port_b_read_enable_clock = "clock0",
		ram_block3a_23.ram_block_type = "M9K",
		ram_block3a_23.lpm_type = "cycloneive_ram_block";
	assign
		address_a_wire = address_a,
		address_b_wire = address_b,
		q_b = {wire_ram_block3a_23portbdataout[0], wire_ram_block3a_22portbdataout[0], wire_ram_block3a_21portbdataout[0], wire_ram_block3a_20portbdataout[0], wire_ram_block3a_19portbdataout[0], wire_ram_block3a_18portbdataout[0], wire_ram_block3a_17portbdataout[0], wire_ram_block3a_16portbdataout[0], wire_ram_block3a_15portbdataout[0], wire_ram_block3a_14portbdataout[0], wire_ram_block3a_13portbdataout[0], wire_ram_block3a_12portbdataout[0], wire_ram_block3a_11portbdataout[0], wire_ram_block3a_10portbdataout[0], wire_ram_block3a_9portbdataout[0], wire_ram_block3a_8portbdataout[0], wire_ram_block3a_7portbdataout[0], wire_ram_block3a_6portbdataout[0], wire_ram_block3a_5portbdataout[0], wire_ram_block3a_4portbdataout[0], wire_ram_block3a_3portbdataout[0], wire_ram_block3a_2portbdataout[0], wire_ram_block3a_1portbdataout[0], wire_ram_block3a_0portbdataout[0]};
endmodule //core_shift_ram_altsyncram


//lpm_counter DEVICE_FAMILY="Cyclone IV E" lpm_direction="UP" lpm_modulus=318 lpm_port_updown="PORT_UNUSED" lpm_width=9 clk_en clock q
//VERSION_BEGIN 18.0 cbx_cycloneii 2018:04:24:18:04:18:SJ cbx_lpm_add_sub 2018:04:24:18:04:18:SJ cbx_lpm_compare 2018:04:24:18:04:18:SJ cbx_lpm_counter 2018:04:24:18:04:18:SJ cbx_lpm_decode 2018:04:24:18:04:18:SJ cbx_mgl 2018:04:24:18:08:49:SJ cbx_nadder 2018:04:24:18:04:18:SJ cbx_stratix 2018:04:24:18:04:18:SJ cbx_stratixii 2018:04:24:18:04:18:SJ  VERSION_END


//lpm_compare DEVICE_FAMILY="Cyclone IV E" LPM_WIDTH=9 ONE_INPUT_IS_CONSTANT="YES" aeb dataa datab
//VERSION_BEGIN 18.0 cbx_cycloneii 2018:04:24:18:04:18:SJ cbx_lpm_add_sub 2018:04:24:18:04:18:SJ cbx_lpm_compare 2018:04:24:18:04:18:SJ cbx_mgl 2018:04:24:18:08:49:SJ cbx_nadder 2018:04:24:18:04:18:SJ cbx_stratix 2018:04:24:18:04:18:SJ cbx_stratixii 2018:04:24:18:04:18:SJ  VERSION_END

//synthesis_resources = 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  core_shift_ram_cmpr
	( 
	aeb,
	dataa,
	datab) /* synthesis synthesis_clearbox=1 */;
	output   aeb;
	input   [8:0]  dataa;
	input   [8:0]  datab;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   [8:0]  dataa;
	tri0   [8:0]  datab;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire  [0:0]  aeb_result_wire;
	wire  [0:0]  aneb_result_wire;
	wire  [24:0]  data_wire;
	wire  eq_wire;

	assign
		aeb = eq_wire,
		aeb_result_wire = (~ aneb_result_wire),
		aneb_result_wire = (data_wire[0] | data_wire[1]),
		data_wire = {datab[8], dataa[8], datab[7], dataa[7], datab[6], dataa[6], datab[5], dataa[5], datab[4], dataa[4], datab[3], dataa[3], datab[2], dataa[2], datab[1], dataa[1], datab[0], dataa[0], (data_wire[23] ^ data_wire[24]), ((data_wire[19] ^ data_wire[20]) | (data_wire[21] ^ data_wire[22])), ((data_wire[15] ^ data_wire[16]) | (data_wire[17] ^ data_wire[18])), ((data_wire[11] ^ data_wire[12]) | (data_wire[13] ^ data_wire[14])), ((data_wire[7] ^ data_wire[8]) | (data_wire[9] ^ data_wire[10])), data_wire[6], (((data_wire[2] | data_wire[3]) | data_wire[4]) | data_wire[5])},
		eq_wire = aeb_result_wire;
endmodule //core_shift_ram_cmpr

//synthesis_resources = lut 9 reg 9 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  core_shift_ram_cntr
	( 
	clk_en,
	clock,
	q) /* synthesis synthesis_clearbox=1 */;
	input   clk_en;
	input   clock;
	output   [8:0]  q;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri1   clk_en;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire  [0:0]   wire_counter_comb_bita_0combout;
	wire  [0:0]   wire_counter_comb_bita_1combout;
	wire  [0:0]   wire_counter_comb_bita_2combout;
	wire  [0:0]   wire_counter_comb_bita_3combout;
	wire  [0:0]   wire_counter_comb_bita_4combout;
	wire  [0:0]   wire_counter_comb_bita_5combout;
	wire  [0:0]   wire_counter_comb_bita_6combout;
	wire  [0:0]   wire_counter_comb_bita_7combout;
	wire  [0:0]   wire_counter_comb_bita_8combout;
	wire  [0:0]   wire_counter_comb_bita_0cout;
	wire  [0:0]   wire_counter_comb_bita_1cout;
	wire  [0:0]   wire_counter_comb_bita_2cout;
	wire  [0:0]   wire_counter_comb_bita_3cout;
	wire  [0:0]   wire_counter_comb_bita_4cout;
	wire  [0:0]   wire_counter_comb_bita_5cout;
	wire  [0:0]   wire_counter_comb_bita_6cout;
	wire  [0:0]   wire_counter_comb_bita_7cout;
	wire  [0:0]   wire_counter_comb_bita_8cout;
	wire	[8:0]	wire_counter_reg_bit_d;
	wire	[8:0]	wire_counter_reg_bit_asdata;
	reg	[8:0]	counter_reg_bit;
	wire	[8:0]	wire_counter_reg_bit_ena;
	wire	[8:0]	wire_counter_reg_bit_sload;
	wire  wire_cmpr4_aeb;
	wire  aclr_actual;
	wire cnt_en;
	wire  compare_result;
	wire  cout_actual;
	wire [8:0]  data;
	wire  external_cin;
	wire  [8:0]  modulus_bus;
	wire  modulus_trigger;
	wire  [8:0]  s_val;
	wire  [8:0]  safe_q;
	wire sclr;
	wire sload;
	wire sset;
	wire  time_to_clear;
	wire  updown_dir;

	cycloneive_lcell_comb   counter_comb_bita_0
	( 
	.cin(external_cin),
	.combout(wire_counter_comb_bita_0combout[0:0]),
	.cout(wire_counter_comb_bita_0cout[0:0]),
	.dataa(counter_reg_bit[0]),
	.datab(updown_dir),
	.datad(1'b1),
	.datac(1'b0)
	);
	defparam
		counter_comb_bita_0.lut_mask = 16'h5A90,
		counter_comb_bita_0.sum_lutc_input = "cin",
		counter_comb_bita_0.lpm_type = "cycloneive_lcell_comb";
	cycloneive_lcell_comb   counter_comb_bita_1
	( 
	.cin(wire_counter_comb_bita_0cout[0:0]),
	.combout(wire_counter_comb_bita_1combout[0:0]),
	.cout(wire_counter_comb_bita_1cout[0:0]),
	.dataa(counter_reg_bit[1]),
	.datab(updown_dir),
	.datad(1'b1),
	.datac(1'b0)
	);
	defparam
		counter_comb_bita_1.lut_mask = 16'h5A90,
		counter_comb_bita_1.sum_lutc_input = "cin",
		counter_comb_bita_1.lpm_type = "cycloneive_lcell_comb";
	cycloneive_lcell_comb   counter_comb_bita_2
	( 
	.cin(wire_counter_comb_bita_1cout[0:0]),
	.combout(wire_counter_comb_bita_2combout[0:0]),
	.cout(wire_counter_comb_bita_2cout[0:0]),
	.dataa(counter_reg_bit[2]),
	.datab(updown_dir),
	.datad(1'b1),
	.datac(1'b0)
	);
	defparam
		counter_comb_bita_2.lut_mask = 16'h5A90,
		counter_comb_bita_2.sum_lutc_input = "cin",
		counter_comb_bita_2.lpm_type = "cycloneive_lcell_comb";
	cycloneive_lcell_comb   counter_comb_bita_3
	( 
	.cin(wire_counter_comb_bita_2cout[0:0]),
	.combout(wire_counter_comb_bita_3combout[0:0]),
	.cout(wire_counter_comb_bita_3cout[0:0]),
	.dataa(counter_reg_bit[3]),
	.datab(updown_dir),
	.datad(1'b1),
	.datac(1'b0)
	);
	defparam
		counter_comb_bita_3.lut_mask = 16'h5A90,
		counter_comb_bita_3.sum_lutc_input = "cin",
		counter_comb_bita_3.lpm_type = "cycloneive_lcell_comb";
	cycloneive_lcell_comb   counter_comb_bita_4
	( 
	.cin(wire_counter_comb_bita_3cout[0:0]),
	.combout(wire_counter_comb_bita_4combout[0:0]),
	.cout(wire_counter_comb_bita_4cout[0:0]),
	.dataa(counter_reg_bit[4]),
	.datab(updown_dir),
	.datad(1'b1),
	.datac(1'b0)
	);
	defparam
		counter_comb_bita_4.lut_mask = 16'h5A90,
		counter_comb_bita_4.sum_lutc_input = "cin",
		counter_comb_bita_4.lpm_type = "cycloneive_lcell_comb";
	cycloneive_lcell_comb   counter_comb_bita_5
	( 
	.cin(wire_counter_comb_bita_4cout[0:0]),
	.combout(wire_counter_comb_bita_5combout[0:0]),
	.cout(wire_counter_comb_bita_5cout[0:0]),
	.dataa(counter_reg_bit[5]),
	.datab(updown_dir),
	.datad(1'b1),
	.datac(1'b0)
	);
	defparam
		counter_comb_bita_5.lut_mask = 16'h5A90,
		counter_comb_bita_5.sum_lutc_input = "cin",
		counter_comb_bita_5.lpm_type = "cycloneive_lcell_comb";
	cycloneive_lcell_comb   counter_comb_bita_6
	( 
	.cin(wire_counter_comb_bita_5cout[0:0]),
	.combout(wire_counter_comb_bita_6combout[0:0]),
	.cout(wire_counter_comb_bita_6cout[0:0]),
	.dataa(counter_reg_bit[6]),
	.datab(updown_dir),
	.datad(1'b1),
	.datac(1'b0)
	);
	defparam
		counter_comb_bita_6.lut_mask = 16'h5A90,
		counter_comb_bita_6.sum_lutc_input = "cin",
		counter_comb_bita_6.lpm_type = "cycloneive_lcell_comb";
	cycloneive_lcell_comb   counter_comb_bita_7
	( 
	.cin(wire_counter_comb_bita_6cout[0:0]),
	.combout(wire_counter_comb_bita_7combout[0:0]),
	.cout(wire_counter_comb_bita_7cout[0:0]),
	.dataa(counter_reg_bit[7]),
	.datab(updown_dir),
	.datad(1'b1),
	.datac(1'b0)
	);
	defparam
		counter_comb_bita_7.lut_mask = 16'h5A90,
		counter_comb_bita_7.sum_lutc_input = "cin",
		counter_comb_bita_7.lpm_type = "cycloneive_lcell_comb";
	cycloneive_lcell_comb   counter_comb_bita_8
	( 
	.cin(wire_counter_comb_bita_7cout[0:0]),
	.combout(wire_counter_comb_bita_8combout[0:0]),
	.cout(wire_counter_comb_bita_8cout[0:0]),
	.dataa(counter_reg_bit[8]),
	.datab(updown_dir),
	.datad(1'b1),
	.datac(1'b0)
	);
	defparam
		counter_comb_bita_8.lut_mask = 16'h5A90,
		counter_comb_bita_8.sum_lutc_input = "cin",
		counter_comb_bita_8.lpm_type = "cycloneive_lcell_comb";
	// synopsys translate_off
	initial
		counter_reg_bit[0:0] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr_actual)
		if (aclr_actual == 1'b1) counter_reg_bit[0:0] <= 1'b0;
		else if  (wire_counter_reg_bit_ena[0:0] == 1'b1) 
			if (wire_counter_reg_bit_sload[0:0] == 1'b1) counter_reg_bit[0:0] <= wire_counter_reg_bit_asdata[0:0];
			else  counter_reg_bit[0:0] <= wire_counter_reg_bit_d[0:0];
	// synopsys translate_off
	initial
		counter_reg_bit[1:1] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr_actual)
		if (aclr_actual == 1'b1) counter_reg_bit[1:1] <= 1'b0;
		else if  (wire_counter_reg_bit_ena[1:1] == 1'b1) 
			if (wire_counter_reg_bit_sload[1:1] == 1'b1) counter_reg_bit[1:1] <= wire_counter_reg_bit_asdata[1:1];
			else  counter_reg_bit[1:1] <= wire_counter_reg_bit_d[1:1];
	// synopsys translate_off
	initial
		counter_reg_bit[2:2] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr_actual)
		if (aclr_actual == 1'b1) counter_reg_bit[2:2] <= 1'b0;
		else if  (wire_counter_reg_bit_ena[2:2] == 1'b1) 
			if (wire_counter_reg_bit_sload[2:2] == 1'b1) counter_reg_bit[2:2] <= wire_counter_reg_bit_asdata[2:2];
			else  counter_reg_bit[2:2] <= wire_counter_reg_bit_d[2:2];
	// synopsys translate_off
	initial
		counter_reg_bit[3:3] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr_actual)
		if (aclr_actual == 1'b1) counter_reg_bit[3:3] <= 1'b0;
		else if  (wire_counter_reg_bit_ena[3:3] == 1'b1) 
			if (wire_counter_reg_bit_sload[3:3] == 1'b1) counter_reg_bit[3:3] <= wire_counter_reg_bit_asdata[3:3];
			else  counter_reg_bit[3:3] <= wire_counter_reg_bit_d[3:3];
	// synopsys translate_off
	initial
		counter_reg_bit[4:4] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr_actual)
		if (aclr_actual == 1'b1) counter_reg_bit[4:4] <= 1'b0;
		else if  (wire_counter_reg_bit_ena[4:4] == 1'b1) 
			if (wire_counter_reg_bit_sload[4:4] == 1'b1) counter_reg_bit[4:4] <= wire_counter_reg_bit_asdata[4:4];
			else  counter_reg_bit[4:4] <= wire_counter_reg_bit_d[4:4];
	// synopsys translate_off
	initial
		counter_reg_bit[5:5] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr_actual)
		if (aclr_actual == 1'b1) counter_reg_bit[5:5] <= 1'b0;
		else if  (wire_counter_reg_bit_ena[5:5] == 1'b1) 
			if (wire_counter_reg_bit_sload[5:5] == 1'b1) counter_reg_bit[5:5] <= wire_counter_reg_bit_asdata[5:5];
			else  counter_reg_bit[5:5] <= wire_counter_reg_bit_d[5:5];
	// synopsys translate_off
	initial
		counter_reg_bit[6:6] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr_actual)
		if (aclr_actual == 1'b1) counter_reg_bit[6:6] <= 1'b0;
		else if  (wire_counter_reg_bit_ena[6:6] == 1'b1) 
			if (wire_counter_reg_bit_sload[6:6] == 1'b1) counter_reg_bit[6:6] <= wire_counter_reg_bit_asdata[6:6];
			else  counter_reg_bit[6:6] <= wire_counter_reg_bit_d[6:6];
	// synopsys translate_off
	initial
		counter_reg_bit[7:7] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr_actual)
		if (aclr_actual == 1'b1) counter_reg_bit[7:7] <= 1'b0;
		else if  (wire_counter_reg_bit_ena[7:7] == 1'b1) 
			if (wire_counter_reg_bit_sload[7:7] == 1'b1) counter_reg_bit[7:7] <= wire_counter_reg_bit_asdata[7:7];
			else  counter_reg_bit[7:7] <= wire_counter_reg_bit_d[7:7];
	// synopsys translate_off
	initial
		counter_reg_bit[8:8] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr_actual)
		if (aclr_actual == 1'b1) counter_reg_bit[8:8] <= 1'b0;
		else if  (wire_counter_reg_bit_ena[8:8] == 1'b1) 
			if (wire_counter_reg_bit_sload[8:8] == 1'b1) counter_reg_bit[8:8] <= wire_counter_reg_bit_asdata[8:8];
			else  counter_reg_bit[8:8] <= wire_counter_reg_bit_d[8:8];
	assign
		wire_counter_reg_bit_asdata = ({9{(~ sclr)}} & (({9{sset}} & s_val) | ({9{(~ sset)}} & (({9{sload}} & data) | (({9{(~ sload)}} & modulus_bus) & {9{(~ updown_dir)}}))))),
		wire_counter_reg_bit_d = {wire_counter_comb_bita_8combout[0:0], wire_counter_comb_bita_7combout[0:0], wire_counter_comb_bita_6combout[0:0], wire_counter_comb_bita_5combout[0:0], wire_counter_comb_bita_4combout[0:0], wire_counter_comb_bita_3combout[0:0], wire_counter_comb_bita_2combout[0:0], wire_counter_comb_bita_1combout[0:0], wire_counter_comb_bita_0combout[0:0]};
	assign
		wire_counter_reg_bit_ena = {9{(clk_en & (((sclr | sset) | sload) | cnt_en))}},
		wire_counter_reg_bit_sload = {9{(((sclr | sset) | sload) | modulus_trigger)}};
	core_shift_ram_cmpr   cmpr4
	( 
	.aeb(wire_cmpr4_aeb),
	.dataa(safe_q),
	.datab(modulus_bus));
	assign
		aclr_actual = 1'b0,
		cnt_en = 1'b1,
		compare_result = wire_cmpr4_aeb,
		cout_actual = (wire_counter_comb_bita_8cout[0:0] | (time_to_clear & updown_dir)),
		data = {9{1'b0}},
		external_cin = 1'b1,
		modulus_bus = 9'b100111101,
		modulus_trigger = cout_actual,
		q = safe_q,
		s_val = {9{1'b1}},
		safe_q = counter_reg_bit,
		sclr = 1'b0,
		sload = 1'b0,
		sset = 1'b0,
		time_to_clear = compare_result,
		updown_dir = 1'b1;
endmodule //core_shift_ram_cntr

//synthesis_resources = lut 9 M9K 2 reg 9 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  core_shift_ram_shift_taps
	( 
	clock,
	shiftin,
	shiftout,
	taps) /* synthesis synthesis_clearbox=1 */;
	input   clock;
	input   [7:0]  shiftin;
	output   [7:0]  shiftout;
	output   [23:0]  taps;

	wire  [23:0]   wire_altsyncram2_q_b;
	wire  [8:0]   wire_cntr1_q;
	wire clken;

	core_shift_ram_altsyncram   altsyncram2
	( 
	.address_a(wire_cntr1_q),
	.address_b(wire_cntr1_q),
	.clock0(clock),
	.clocken0(clken),
	.data_a({wire_altsyncram2_q_b[15:0], shiftin}),
	.q_b(wire_altsyncram2_q_b),
	.wren_a(1'b1));
	core_shift_ram_cntr   cntr1
	( 
	.clk_en(clken),
	.clock(clock),
	.q(wire_cntr1_q));
	assign
		clken = 1'b1,
		shiftout = wire_altsyncram2_q_b[23:16],
		taps = wire_altsyncram2_q_b;
endmodule //core_shift_ram_shift_taps
//VALID FILE


// synopsys translate_off
`timescale 1 ps / 1 ps
// synopsys translate_on
module core_shift_ram (
	clock,
	shiftin,
	shiftout,
	taps0x,
	taps1x,
	taps2x)/* synthesis synthesis_clearbox = 1 */;

	input	  clock;
	input	[7:0]  shiftin;
	output	[7:0]  shiftout;
	output	[7:0]  taps0x;
	output	[7:0]  taps1x;
	output	[7:0]  taps2x;

	wire [7:0] sub_wire0;
	wire [23:0] sub_wire1;
	wire [7:0] shiftout = sub_wire0[7:0];
	wire [23:16] sub_wire5 = sub_wire1[23:16];
	wire [15:8] sub_wire4 = sub_wire1[15:8];
	wire [15:8] sub_wire3 = sub_wire4[15:8];
	wire [7:0] sub_wire2 = sub_wire1[7:0];
	wire [7:0] taps0x = sub_wire2[7:0];
	wire [7:0] taps1x = sub_wire3[15:8];
	wire [7:0] taps2x = sub_wire5[23:16];

	core_shift_ram_shift_taps	core_shift_ram_shift_taps_component (
				.clock (clock),
				.shiftin (shiftin),
				.shiftout (sub_wire0),
				.taps (sub_wire1));

endmodule

// ============================================================
// CNX file retrieval info
// ============================================================
// Retrieval info: PRIVATE: ACLR NUMERIC "0"
// Retrieval info: PRIVATE: CLKEN NUMERIC "0"
// Retrieval info: PRIVATE: GROUP_TAPS NUMERIC "1"
// Retrieval info: PRIVATE: INTENDED_DEVICE_FAMILY STRING "Cyclone IV E"
// Retrieval info: PRIVATE: NUMBER_OF_TAPS NUMERIC "3"
// Retrieval info: PRIVATE: RAM_BLOCK_TYPE NUMERIC "1"
// Retrieval info: PRIVATE: SYNTH_WRAPPER_GEN_POSTFIX STRING "1"
// Retrieval info: PRIVATE: TAP_DISTANCE NUMERIC "320"
// Retrieval info: PRIVATE: WIDTH NUMERIC "8"
// Retrieval info: LIBRARY: altera_mf altera_mf.altera_mf_components.all
// Retrieval info: CONSTANT: INTENDED_DEVICE_FAMILY STRING "Cyclone IV E"
// Retrieval info: CONSTANT: LPM_HINT STRING "RAM_BLOCK_TYPE=M9K"
// Retrieval info: CONSTANT: LPM_TYPE STRING "altshift_taps"
// Retrieval info: CONSTANT: NUMBER_OF_TAPS NUMERIC "3"
// Retrieval info: CONSTANT: TAP_DISTANCE NUMERIC "320"
// Retrieval info: CONSTANT: WIDTH NUMERIC "8"
// Retrieval info: USED_PORT: clock 0 0 0 0 INPUT NODEFVAL "clock"
// Retrieval info: USED_PORT: shiftin 0 0 8 0 INPUT NODEFVAL "shiftin[7..0]"
// Retrieval info: USED_PORT: shiftout 0 0 8 0 OUTPUT NODEFVAL "shiftout[7..0]"
// Retrieval info: USED_PORT: taps0x 0 0 8 0 OUTPUT NODEFVAL "taps0x[7..0]"
// Retrieval info: USED_PORT: taps1x 0 0 8 0 OUTPUT NODEFVAL "taps1x[7..0]"
// Retrieval info: USED_PORT: taps2x 0 0 8 0 OUTPUT NODEFVAL "taps2x[7..0]"
// Retrieval info: CONNECT: @clock 0 0 0 0 clock 0 0 0 0
// Retrieval info: CONNECT: @shiftin 0 0 8 0 shiftin 0 0 8 0
// Retrieval info: CONNECT: shiftout 0 0 8 0 @shiftout 0 0 8 0
// Retrieval info: CONNECT: taps0x 0 0 8 0 @taps 0 0 8 0
// Retrieval info: CONNECT: taps1x 0 0 8 0 @taps 0 0 8 8
// Retrieval info: CONNECT: taps2x 0 0 8 0 @taps 0 0 8 16
// Retrieval info: GEN_FILE: TYPE_NORMAL core_shift_ram.v TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL core_shift_ram.inc FALSE
// Retrieval info: GEN_FILE: TYPE_NORMAL core_shift_ram.cmp FALSE
// Retrieval info: GEN_FILE: TYPE_NORMAL core_shift_ram.bsf FALSE
// Retrieval info: GEN_FILE: TYPE_NORMAL core_shift_ram_inst.v TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL core_shift_ram_bb.v TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL core_shift_ram_syn.v TRUE
// Retrieval info: LIB_FILE: altera_mf
